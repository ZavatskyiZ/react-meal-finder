{"version":3,"sources":["components/MealItem.jsx","components/MealsList.jsx","components/Search.jsx","components/Ingredients.jsx","components/Meal.jsx","components/Error.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MealItem","meal","strMeal","strMealThumb","strCategory","strArea","idMeal","getMeal","className","src","alt","to","MealsList","mealsList","map","Search","searchMeals","React","useState","text","setText","action","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","Ingredients","ingredients","i","push","ing","uuidv4","Meal","match","useEffect","params","strInstructions","Error","App","setMealsList","setMeal","a","fetch","then","res","json","data","meals","console","log","exact","path","render","props","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aef618b.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst MealItem = ({meal:{strMeal, strMealThumb, strCategory, strArea, idMeal }, getMeal, }) => {\n    return (\n        <div className=\"meal-item\">\n            <div className=\"meal-pic\">\n                <img src={strMealThumb} alt={strMeal} className=\"meals-img\"/>\n            </div>\n            <div className=\"meal-info\">\n                <h3>{strMeal}</h3>\n                <p>Category: {strCategory}</p>\n                <p>Area: {strArea}</p>\n                <div className=\"meal-link\">\n                    <Link to={`/meal/${idMeal}`} className=\"full-recipe\">Full Recipe</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MealItem\n","import React from 'react'\nimport MealItem from './MealItem'\n\nconst MealsList = ({ mealsList, getMeal}) => {\n    return (\n        <div className=\"meal-grid\">\n            {mealsList.map(meal =>\n            <MealItem key={meal.idMeal} getMeal={getMeal} meal={meal}/>)}\n        </div>\n    )\n}\n\nexport default MealsList\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction Search( {searchMeals}) {\n    const [text, setText] = React.useState(``);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if( text === ``){\n            alert(`Search is empty!`)\n        }\n        else{\n            searchMeals(text);\n            setText(``);\n        }\n    }\n    const onChange = e => setText(e.target.value);\n    return (\n        <div>\n            <Link to='/' className='home-btn'><h1>Meal Finder</h1></Link>\n            <form action=\"\" onSubmit={onSubmit}>\n                <input type=\"text\" \n                    value={text}\n                    onChange={onChange}\n                    placeholder=\"Search for meals or keywords\"/>\n                <button type=\"submit\"><i className=\"fas fa-search\"></i></button>\n            </form> \n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nfunction Ingredients({meal}) {\n    const ingredients = [];\n    \n\n  for (let i = 1; i <= 20; i++) {\n    if (meal[`strIngredient${i}`]) {\n      ingredients.push(\n        `${meal[`strIngredient${i}`]} â€” ${meal[`strMeasure${i}`]}`\n      );\n    } else {\n      break;\n    }\n    }\n   \n    return (\n        <div className=\"ingredients-list\"> \n          {ingredients.map(ing => \n            <li key={uuidv4()}>{ing}</li>)} \n        </div>\n    )\n}\n\nexport default Ingredients\n","import React from 'react'\nimport Ingredients from './Ingredients'\n\n\n\nconst Meal = ({ meal, match, getMeal }) => {\n\n    React.useEffect(() => {\n        getMeal(match.params.idMeal); \n        // eslint-disable-next-line\n    }, []);\n\n    \n    const {\n        strMeal,\n        strCategory,\n        strArea,\n        strInstructions,\n        strMealThumb\n    } = meal;\n\n    \n   \n    return (\n        <div className=\"meal-page\">\n            <section className='meal-header'>\n                <h3>{strMeal}</h3>\n            </section>\n            <section className=\"picture\">\n                <img src={strMealThumb} alt={strMeal}/>\n            </section>\n            <section className=\"meal-about\">\n                <p><span><i className=\"fas fa-utensils\"></i></span> {strCategory}</p>\n                <p><span><i className=\"fas fa-globe-europe\"></i></span> {strArea}</p>\n            </section>\n            <section className=\"ingredients\">\n                <h4>Ingredients:</h4>\n                <Ingredients meal={meal}/>\n            </section>\n            <section className=\"instructions\">\n                <h4>Recipe:</h4>\n                <p>{strInstructions}</p>\n            </section>\n        </div>\n    )\n}\n\nexport default Meal\n","import React from 'react'\n\nfunction Error() {\n    return (\n        <div className=\"error\">\n            <p>Unfortunately, there is no such recipe</p>\n        </div>\n    )\n}\n\nexport default Error\n","import React from 'react'\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport MealsList from './components/MealsList';\nimport Search from './components/Search'\nimport Meal from './components/Meal'\nimport Error from './components/Error'\n\n\n\n\nfunction App() {\n  const [mealsList, setMealsList] = React.useState([]);\n  const [meal, setMeal] = React.useState({});\n\n\n  //Searching meals\n  const searchMeals =  text => {\n     fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${text}`)\n    .then(res => res.json())\n    .then(data => setMealsList(data.meals))\n    .then(data=> console.log(data))\n  }\n  //single meal\n  const getMeal = async idMeal =>{\n    await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idMeal}`)\n    .then(res => res.json())\n    .then(data => setMeal(data.meals[0]))\n  }\n  \n  \n\n  return (\n    <Router>\n      <div className=\"search\">\n            <Search searchMeals={searchMeals}/>\n          </div>\n      <Switch>\n      <Route exact path='/' render={props=>(\n        <React.Fragment>\n            {mealsList === null ? <Error/>:<MealsList getMeal={getMeal} mealsList={mealsList}/>}\n        </React.Fragment>)}/>\n        <Route exact path='/meal/:idMeal' render={props=>(\n          <Meal {...props} getMeal={getMeal}  meal={meal}/>\n            )}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}